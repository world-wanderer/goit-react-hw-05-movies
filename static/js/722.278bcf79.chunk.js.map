{"version":3,"file":"static/js/722.278bcf79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/api/api.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list_movies\":\"MovieList_list_movies__qpjwj\",\"list_movies_card\":\"MovieList_list_movies_card__zXxCg\",\"title\":\"MovieList_title__QyMtJ\"};","import css from './MovieList.module.css';\nimport { lazy } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={css.list_movies}>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <div className={css.list_movies_card}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt={movie.title}\n                    loading={String(lazy)}\n                  />\n                  <p className={css.title}>{movie.title}</p>\n                </Link>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default MovieList;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '45a3b58db21831f605301278579c97a0',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day', {});\n    return data.results;\n  } catch (error) {\n    toast.warning('OPPS. Something wrong!');\n    return error.message;\n  }\n};\n\nexport const searchMovieByTitle = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    console.log(data.results);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}`, {\n      params: { language: 'en-US' },\n    });\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const getCastById = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const getReviewsById = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { ImSearch } from 'react-icons/im';\nimport { BsTrash } from 'react-icons/bs';\nimport css from './SearchForm.module.css';\n\nfunction SearchForm({ onSubmit }) {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const normalizedQuery = value.trim().toLocaleLowerCase();\n\n    if (!normalizedQuery) {\n      toast.warning('The query is empty! Try again.');\n      return;\n    }\n    onSubmit(normalizedQuery);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const clearInput = () => {\n    setValue('');\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={value}\n          className={css.input}\n        />\n        <button type=\"submit\">\n          <ImSearch />\n        </button>\n        <button type=\"button\" onClick={clearInput}>\n          {' '}\n          <BsTrash />\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { searchMovieByTitle } from '../components/api/api';\nimport MovieList from '../components/MovieList/MovieList';\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction Movies() {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieToSearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieToSearch) return;\n\n    searchMovieByTitle(movieToSearch).then(data =>\n      setSearchedMovies(data.results)\n    );\n  }, [movieToSearch]);\n\n  const handleSubmit = async newQuery => {\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <>\n      <header>\n        <SearchForm onSubmit={handleSubmit} />\n      </header>\n      <main>{searchedMovies && <MovieList movies={searchedMovies} />}</main>\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["movies","location","useLocation","className","css","map","movie","to","id","state","from","src","poster_path","alt","title","loading","String","lazy","instance","axios","baseURL","params","api_key","fetchTrendingMovies","get","data","results","toast","message","searchMovieByTitle","query","language","page","include_adult","console","log","fetchMovieDetails","movie_id","getCastById","cast","getReviewsById","onSubmit","useState","value","setValue","e","preventDefault","normalizedQuery","trim","toLocaleLowerCase","onChange","target","type","autoComplete","autoFocus","placeholder","onClick","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","movieToSearch","useEffect","then","handleSubmit","newQuery","MovieList"],"sourceRoot":""}